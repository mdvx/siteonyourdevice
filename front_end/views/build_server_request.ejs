<!doctype html>
<html>
<head>
    <title>Build server installer for <%- domain_name %></title>
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">
    <style>
        body         { padding-top:80px; }
    </style>
    <script src="scripts/script.js" type="text/javascript"></script>
        <script src="http://siteonyourdevice.com:3000/socket.io/socket.io.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
        <script>
            var socket = io.connect('http://siteonyourdevice.com:3000');
            //on connetion, updates connection state and sends subscribe request
            socket.on('connect', function(data){
            });

            //when reconnection is attempted, updates status 
            socket.on('reconnecting', function(data){
            });

            //on new message adds a new message to display
            socket.on('message_rabbitmq', function (data) {
              var msg = data.text;
            });
            
            function send_build_request(user, password, domain, platform, private_site, external_host, server_type, content_path, package_type, bit){
              if(name === undefined){
                return;
              } 
              
              var build_args = { "domain": domain, 
                             "platform": platform, 
                             "private_site": private_site, 
                             "external_host": external_host, 
                             "server_type": server_type,
                             "content_path": content_path,
                             "package_type" : package_type,
                             "email" : user,
                             "password" : password,
                             "arch" : bit
                           };
              var msg = JSON.stringify(build_args);
              socket.emit('publish_rabbitmq', msg);
            }
            
            function send_build_request_local(user, password, domain) {
              return send_build_request(user, password, domain, 'linux', platform, 0, 'localhost:80', 0, 'content_path', 'DEB', 64)
            }
            
        </script>
</head>
<body>
  <button id="build_package_button" onclick="send_build_request_local('<%- user.local.email %>', '<%- user.local.password %>', '<%- domain_name %>')">Build package</button>
</body>
</html>
