<!doctype html>
<html>
    <head>
        <title>Site on your device</title>
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">
        <style>
            body         { padding-top:80px; word-wrap:break-word; }
        </style>
        
        <script src="scripts/script.js" type="text/javascript"></script>
        <script src="http://siteonyourdevice.com:3000/socket.io/socket.io.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
        <script>
            const GB = (1024*1024*1024)
            
            //socket io client
            //var io = require('socket.io');
            var socket = io.connect('http://siteonyourdevice.com:3000');
            
            function handle_onconnection_changed(is_connected)
            {
                if(is_connected){
                    $('#status_label').html(SERVER_STATUS.ONLINE);
                    $('#status_img').attr("src", SERVER_STATUS_IMG.ONLINE);
                    $('#info_button').prop('disabled', false);
                    $('#shutdown_button').prop('disabled', false);
                    $('#get_config_button').prop('disabled', false);
                }
                else{
                    $('#status_label').html(SERVER_STATUS.OFFLINE);
                    $('#status_img').attr("src", SERVER_STATUS_IMG.OFFLINE);
                    $('#info_button').prop('disabled', true); 
                    $('#shutdown_button').prop('disabled', true);
                    $('#get_config_button').prop('disabled', true);
                    
                    $('#os_label').html(SERVER_OS_DEFAULT_LABEL);
                    $('#cpu_label').html(SERVER_CPU_DEFAULT_LABEL);
                    $('#ram_label').html(SERVER_RAM_DEFAULT_LABEL);
                    
                    $('#server_setting_content_path_label').html(SERVER_SETTING_CONTENT_PATH_LABEL);
                    $('#server_setting_private_site_label').html(SERVER_SETTING_PRIVATE_SITE_LABEL);
                    $('#server_setting_ex_host_label').html(SERVER_SETTING_EXTERNAL_HOST_LABEL);
                }
            }
            
            function handle_state_changed(stateObj)
            {
                if(stateObj.host !== '<%- domain_name %>'){
                    return;
                }
                
                handle_onconnection_changed(stateObj.status === CONNECTED_STATUS.CONNECTED);
            }
            
            function handle_command_received(msgObj)
            {
                if('<%- user._id %>' !== msgObj.id){
                    return;
                }
                
                var is_ok = is_succsess_command(msgObj);
                
                if(is_ping_command(msgObj)){
                    handle_onconnection_changed(is_ok);
                }
                else if(is_info_command(msgObj)){
                    if(is_ok){
                        var system_info = JSON.parse(msgObj.args);
                        $('#os_label').html(system_info.os);
                        $('#cpu_label').html(system_info.cpu);
                        var ram_total_gb = system_info.ram_total/GB;
                        var ram_total_fr = system_info.ram_free/GB;
                        $('#ram_label').html(ram_total_gb.toFixed(2) + " GB (" + ram_total_fr.toFixed(2) + " GB free)");
                    }
                    else{
                        $('#os_label').html(SERVER_OS_DEFAULT_LABEL);
                        $('#cpu_label').html(SERVER_CPU_DEFAULT_LABEL);
                        $('#ram_label').html(SERVER_RAM_DEFAULT_LABEL);
                    }
                }
                else if(is_shutdown_command(msgObj)){
                
                }
                else if(is_config_command(msgObj)){
                    if(is_ok){
                        var config = JSON.parse(msgObj.args);
                        $('#server_setting_content_path_label').html(config.content_path);
                        $('#server_setting_private_site_label').html(config.private_site);
                        $('#server_setting_ex_host_label').html(config.external_host);
                    }
                    else{
                        $('#server_setting_content_path_label').html(SERVER_SETTING_CONTENT_PATH_LABEL);
                        $('#server_setting_private_site_label').html(SERVER_SETTING_PRIVATE_SITE_LABEL);
                        $('#server_setting_ex_host_label').html(SERVER_SETTING_EXTERNAL_HOST_LABEL);
                    }
                }
            }
            
            //on connetion, updates connection state and sends subscribe request
            socket.on('connect', function(data){
                socket.emit('subscribe', {channel:CHANNEL_OUT});
                socket.emit('subscribe', {channel:CHANNEL_CLIENTS_STATE});
            });

            //when reconnection is attempted, updates status 
            socket.on('reconnecting', function(data){
            });

            //on new message adds a new message to display
            socket.on('message', function (data) {
                var msg = data.text;
                
                if (data.channel === CHANNEL_OUT) {
                    var msgObj = parse_command_out(msg);
                    if(msgObj == undefined){
                        return;
                    }
                    
                    handle_command_received(msgObj);
                }
                else if(data.channel === CHANNEL_CLIENTS_STATE){
                    var stateObj = parse_state_msg(msg);
                    if(stateObj == undefined){
                        return;
                    }
                    
                    handle_state_changed(stateObj);
                }
            });

            function init()
            {
                ping_server('<%- user._id %>', '<%- domain_name %>', socket);
                $('#status_label').html(SERVER_STATUS.OFFLINE);
                $('#status_img').attr("src", SERVER_STATUS_IMG.OFFLINE);
                $('#os_label').html(SERVER_OS_DEFAULT_LABEL);
                $('#cpu_label').html(SERVER_CPU_DEFAULT_LABEL);
                $('#ram_label').html(SERVER_RAM_DEFAULT_LABEL);
                
                $('#server_setting_content_path_label').html(SERVER_SETTING_CONTENT_PATH_LABEL);
                $('#server_setting_private_site_label').html(SERVER_SETTING_PRIVATE_SITE_LABEL);
                $('#server_setting_ex_host_label').html(SERVER_SETTING_EXTERNAL_HOST_LABEL);
            }
            
        </script>

    </head>
    <body onload = "init()">
        <div class="container">
            <div class="page-header text-left">
                <div class="well">
                    <legend id="server_name_label"><%- domain_name %></legend>
                    Status: <img id="status_img" src="images/offline.png"/> <label id="status_label"></label><br>
                    Os: <label id="os_label"></label><br>
                    Processor: <label id="cpu_label"></label><br>
                    Installed memory(RAM): <label id="ram_label"></label>
                </div>
                <button id="info_button" disabled onclick="server_info('<%- user._id %>', '<%- domain_name %>', socket)">Info</button>
                <button id="shutdown_button" disabled onclick="shutdown_server('<%- user._id %>', '<%- domain_name %>', socket)">Shutdown</button>
                
                <div class="well">
                    Content path: <label id="server_setting_content_path_label"></label><br>
                    Private site: <label id="server_setting_private_site_label"></label><br>
                    External host: <label id="server_setting_ex_host_label"></label>
                </div>
                <button id="get_config_button" disabled onclick="sync_server_config('<%- user._id %>', '<%- domain_name %>', socket)">Sync settings</button>
            </div>
        </div>
    </body>
</html>
