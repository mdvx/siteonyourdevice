<!doctype html>
<html>
    <head>
        <title>Site on your device</title>
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">
        <style>
            body         { padding-top:80px; word-wrap:break-word; }
        </style>
        
        <script src="scripts/script.js" type="text/javascript"></script>
        <script src="http://siteonyourdevice.com:3000/socket.io/socket.io.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
        <script>
            const GB = (1024*1024*1024)
            
            //socket io client
            //var io = require('socket.io');
            var socket = io.connect('http://siteonyourdevice.com:3000');
            
            function setSettings(id, name, socket) {
              var content_path = $('#server_setting_content_path_label').val();
              var private_site = $('#server_setting_private_site_label').html() == SERVER_SETTING_ACCSESS_SITE.PRIVATE;
              var server_type = document.forms["server_type"]["server_type_local"].checked == true ? SERVER_SETTING_HTTP_SERVER_TYPE.LOCAL_SERVER : SERVER_SETTING_HTTP_SERVER_TYPE.EXTERNAL_SERVER;
              
              var external_host = $('#server_setting_ex_host_label').val();
              var local_host = $('#server_setting_local_host_label').html();
              
              var http_handlers_utls = [];              
              var urls_handlers_table = document.getElementById('urls_handlers_table');
              for (var i = 0, row; row = urls_handlers_table.rows[i]; i++) {
                 var url = { url : row.cells[1].firstChild.nodeValue,   
                             handler : row.cells[2].firstChild.nodeValue };
                http_handlers_utls.push(url);
              }
              
              var http_server_sockets = [];
              var socket_urls_table = document.getElementById('socket_urls_table');
              for (var i = 0, row; row = socket_urls_table.rows[i]; i++) {
                 var url = { type : row.cells[1].firstChild.nodeValue,   
                             path : row.cells[2].firstChild.nodeValue };
                http_server_sockets.push(url);
              }
              
              var config = { "local_host": local_host, 
                             "content_path": content_path, 
                             "private_site": private_site, 
                             "external_host": external_host, 
                             "server_type": server_type, 
                             "http_handlers_utls": http_handlers_utls, 
                             "http_server_sockets": http_server_sockets 
                           };
              return set_server_config(id, name, "'" + JSON.stringify(config) + "'", socket);
            }
            
            function setServerType(type)
            {
                if(type == SERVER_SETTING_HTTP_SERVER_TYPE.LOCAL_SERVER){
                    document.forms["server_type"]["server_type_local"].checked = true;
                }
                else{
                    document.forms["server_type"]["server_type_external"].checked = true;
                }
            }
            
            function drawUrlHandlersTable(urls)
            {
                $('#urls_handlers_table tr').remove();
                for(var i = 0; i < urls.length; i++){
                    $('#urls_handlers_table').append('<tr><td>' + (i + 1) + '</td>' + '<td>' + urls[i].url + '</td>' + '<td>' + urls[i].handler + '</td></tr>');
                }
            }
            
            function drawSocketsPathTable(sockets)
            {
                $('#socket_urls_table tr').remove();
                for(var i = 0; i < sockets.length; i++){
                    $('#socket_urls_table').append('<tr><td>' + (i + 1) + '</td>' + '<td>' + sockets[i].type + '</td>' + '<td>' + sockets[i].path + '</td></tr>');
                }
            }
            
            function handle_onconnection_changed(is_connected)
            {
                if(is_connected){
                    $('#status_label').html(SERVER_STATUS.ONLINE);
                    $('#status_img').attr("src", SERVER_STATUS_IMG.ONLINE);
                    $('#info_button').prop('disabled', false);
                    $('#get_config_button').prop('disabled', false);
                    $('#set_config_button').prop('disabled', false);
                }
                else{
                    $('#status_label').html(SERVER_STATUS.OFFLINE);
                    $('#status_img').attr("src", SERVER_STATUS_IMG.OFFLINE);
                    $('#info_button').prop('disabled', true);
                    $('#get_config_button').prop('disabled', true);
                    $('#set_config_button').prop('disabled', true);
                    
                    $('#os_label').html(SERVER_OS_DEFAULT_LABEL);
                    $('#cpu_label').html(SERVER_CPU_DEFAULT_LABEL);
                    $('#ram_label').html(SERVER_RAM_DEFAULT_LABEL);
                    
                    $('#server_setting_content_path_label').val(SERVER_SETTING_CONTENT_PATH_LABEL);
                    $('#server_setting_private_site_label').html(SERVER_SETTING_ACCSESS_SITE.PUBLIC);
                    
                    //setServerType(SERVER_SETTING_HTTP_SERVER_TYPE.LOCAL_SERVER);
                    document.forms["server_type"]["server_type_local"].checked = true;
                    $('#server_setting_ex_host_label').val(SERVER_SETTING_EXTERNAL_HOST_LABEL);
                    $('#server_setting_local_host_label').html(SERVER_SETTING_LOCAL_HOST_LABEL);
                    
                    drawUrlHandlersTable([]);
                    drawSocketsPathTable([]);
                }
            }
            
            function handle_state_changed(stateObj)
            {
                if(stateObj.host !== '<%- domain_name %>'){
                    return;
                }
                
                handle_onconnection_changed(stateObj.status === CONNECTED_STATUS.CONNECTED);
            }
            
            function handle_command_received(msgObj)
            {
                if('<%- user._id %>' !== msgObj.id){
                    return;
                }
                
                var is_ok = is_succsess_command(msgObj);
                
                if(is_ping_command(msgObj)){
                    handle_onconnection_changed(is_ok);
                }
                else if(is_info_command(msgObj)){
                    if(is_ok){
                        var system_info = JSON.parse(msgObj.args);
                        $('#os_label').html(system_info.os);
                        $('#cpu_label').html(system_info.cpu);
                        var ram_total_gb = system_info.ram_total/GB;
                        var ram_total_fr = system_info.ram_free/GB;
                        $('#ram_label').html(ram_total_gb.toFixed(2) + " GB (" + ram_total_fr.toFixed(2) + " GB free)");
                    }
                    else{
                        $('#os_label').html(SERVER_OS_DEFAULT_LABEL);
                        $('#cpu_label').html(SERVER_CPU_DEFAULT_LABEL);
                        $('#ram_label').html(SERVER_RAM_DEFAULT_LABEL);
                    }
                }
                else if(is_config_command(msgObj)){
                    if(is_ok){
                        var config = JSON.parse(msgObj.args);
                        $('#server_setting_content_path_label').val(config.content_path);
                        $('#server_setting_private_site_label').html(config.private_site ? SERVER_SETTING_ACCSESS_SITE.PRIVATE : SERVER_SETTING_ACCSESS_SITE.PUBLIC);
                        
                        setServerType(config.server_type);
                        $('#server_setting_ex_host_label').val(config.external_host);
                        $('#server_setting_local_host_label').html(config.local_host);
                        
                        drawUrlHandlersTable(config.http_handlers_utls);
                        drawSocketsPathTable(config.http_server_sockets);
                        
                    }
                    else{
                        $('#server_setting_content_path_label').val(SERVER_SETTING_CONTENT_PATH_LABEL);
                        $('#server_setting_private_site_label').html(SERVER_SETTING_ACCSESS_SITE.PUBLIC);
                        
                        //setServerType(SERVER_SETTING_HTTP_SERVER_TYPE.LOCAL_SERVER);
                        document.forms["server_type"]["server_type_local"].checked = true;
                        $('#server_setting_ex_host_label').val(SERVER_SETTING_EXTERNAL_HOST_LABEL);
                        $('#server_setting_local_host_label').html(SERVER_SETTING_LOCAL_HOST_LABEL);
                        
                        drawUrlHandlersTable([]);
                        drawSocketsPathTable([]);
                    }
                }
            }
            
            //on connetion, updates connection state and sends subscribe request
            socket.on('connect', function(data){
                socket.emit('subscribe', {channel:CHANNEL_OUT});
                socket.emit('subscribe', {channel:CHANNEL_CLIENTS_STATE});
            });

            //when reconnection is attempted, updates status 
            socket.on('reconnecting', function(data){
            });

            //on new message adds a new message to display
            socket.on('message', function (data) {
                var msg = data.text;
                
                if (data.channel === CHANNEL_OUT) {
                    var msgObj = parse_command_out(msg);
                    if(msgObj == undefined){
                        return;
                    }
                    
                    handle_command_received(msgObj);
                }
                else if(data.channel === CHANNEL_CLIENTS_STATE){
                    var stateObj = parse_state_msg(msg);
                    if(stateObj == undefined){
                        return;
                    }
                    
                    handle_state_changed(stateObj);
                }
            });
            
            function init()
            {
                ping_server('<%- user._id %>', '<%- domain_name %>', socket);
                $('#status_label').html(SERVER_STATUS.OFFLINE);
                $('#status_img').attr("src", SERVER_STATUS_IMG.OFFLINE);
                $('#os_label').html(SERVER_OS_DEFAULT_LABEL);
                $('#cpu_label').html(SERVER_CPU_DEFAULT_LABEL);
                $('#ram_label').html(SERVER_RAM_DEFAULT_LABEL);
                
                $('#server_setting_content_path_label').val(SERVER_SETTING_CONTENT_PATH_LABEL);
                $('#server_setting_private_site_label').html(SERVER_SETTING_ACCSESS_SITE.PUBLIC);
                
                //setServerType(SERVER_SETTING_HTTP_SERVER_TYPE.LOCAL_SERVER);
                document.forms["server_type"]["server_type_local"].checked = true;
                $('#server_setting_ex_host_label').val(SERVER_SETTING_EXTERNAL_HOST_LABEL);
                $('#server_setting_local_host_label').html(SERVER_SETTING_LOCAL_HOST_LABEL);
            }
        </script>

    </head>
    <body onload = "init()">
        <div class="row">
            <div class="container">
                <legend id="server_name_label"><%- domain_name %></legend>
                <div class="col-sm-4">
                    <div class="well">                        
                        Status: <img id="status_img" src="images/offline.png"/> <label id="status_label"></label><br>
                        Os: <label id="os_label"></label><br>
                        Processor: <label id="cpu_label"></label><br>
                        Installed memory(RAM): <label id="ram_label"></label>
                    </div>
                    <button id="info_button" disabled onclick="server_info('<%- user._id %>', '<%- domain_name %>', socket)">Info</button>
                </div>
                
                <div class="col-sm-8">
                    <div class="well">
                            <div class="row">
                                <div class="col-sm-6">
                                    <div>Server type:</div>
                                    <form role="form" id="server_type">
                                        <label class="radio-inline">
                                            <input type="radio" name="server_t" id="server_type_local">Local
                                        </label>
                                        <label class="radio-inline">
                                            <input type="radio" name="server_t" id="server_type_external">External
                                        </label>
                                    </form>
                                    <div>Private site: <label id="server_setting_private_site_label"></label></div>
                                </div>
                                
                                <div class="col-sm-6">
                                    External server: <input id="server_setting_ex_host_label"></input><br>
                                    
                                    Local server: <label id="server_setting_local_host_label"></label><br>
                                    Content path: <input id="server_setting_content_path_label"></input>
                                </div>
                            </div>
                            <div>
                                Urls handlers:
                                <table class="table" id="urls_handlers_table">
                                    <thead>
                                      <tr>
                                        <th>#</th>
                                        <th>Url</th>
                                        <th>Handler</th>
                                      </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>  
                                </table>
                                Server sockets:
                                <table class="table" id="socket_urls_table">
                                    <thead>
                                      <tr>
                                        <th>#</th>
                                        <th>Socket type</th>
                                        <th>Socket path</th>
                                      </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>  
                                </table>
                            </div>
                    </div>
                    <button id="get_config_button" disabled onclick="sync_server_config('<%- user._id %>', '<%- domain_name %>', socket)">Get settings</button>
                    <button id="set_config_button" disabled onclick="setSettings('<%- user._id %>', '<%- domain_name %>', socket)">Apply settings</button>
                </div>
            </div>
        </div>
    </body>
</html>
